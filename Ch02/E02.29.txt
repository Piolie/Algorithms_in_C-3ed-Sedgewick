/* ---------------------------------------------------------------------
                              EXERCISE 2.29
------------------------------------------------------------------------
You are given the information that the running time of one algorithm is
is always about N log N and that the running time of another algorithm
is O(N^3). What does this statement imply about the relative performance
of the algorithms?
--------------------------------------------------------------------- */

Some more, but not much. It means that the first algorithm performs
about N log N, while the second one does it not worse than O(N^3). It
could be the case that the second algorithm always performs better than
the first, since the second is still just an upper bound.

The book defines "about" like this:
    When a function f(N) is asymptotically large compared to another
    function g(N) (that is, g(N)/f(N) -> 0 as N -> inf), we sometimes
    use in this book the (decidedly nontechnical) terminology
    _about f(N)_ to mean f(N) + O(g(N)). What we seem to lose in
    mathematical precision we gain in clarity, for we are more
    interested in the performance of algorithms than in mathematical
    details. In such cases, we can rest assured that, for large N
    (if not for all N), the quantity in question will be close to f(N).
