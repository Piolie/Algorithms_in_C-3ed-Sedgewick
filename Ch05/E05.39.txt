/* ---------------------------------------------------------------------
                             EXERCISE 5.39
------------------------------------------------------------------------
Draw the tree corresponding to Figure 5.15 for the case where we
exchange the recursive calls in Program 5.11.
--------------------------------------------------------------------- */

  Figure 5.15
  Top-down dynamic programming for computing Fibonacci numbers

  This picture of the recursive calls used to compute F_8 by the
  topÂ­down dynamic programming implementation of the recursive algorithm
  illustrates how saving computed values cuts the cost from exponential
  (see Figure 5.14) to linear.

               21                  F8
               / \                / \
             13   8              F7  F6
             / \                / \
            8   5              F6  F5
           / \                / \
          5   3              F5  F4
         / \                / \
        3   2              F4  F3
       / \                / \
      2   1              F3  F2
     / \                / \
    1   1              F2  F1
   / \                / \
  1   0              F1  F0

I've added the argument of the function in each call. It makes it easier
for me to visualize the tree than the returned values.

By "exchange the recursive calls" I understand calling F(i - 2) before
F(i - 1). The C programming language does not guarantee the order in
which the operands are evaluated in an arithmetic expression, so we have
to assume that for the tree above F(i - 1) was consistently called
first. The tree where F(i - 2) is consistently called first is:

                21                     F8
               / \                    / \
              /   \                  /   \
             /     \                /     \
            8       13             F6      F7
           / \     / \            / \     / \
          /   \   5   8          /   \   F5  F6
         /     \                /     \
        3       5              F4      F5
       / \     / \            / \     / \
      /   \   2   3          /   \   F3  F4
     /     \                /     \
    1       2              F2      F3
   / \     / \            / \     / \
  0   1   1   1          F0  F1  F1  F2
